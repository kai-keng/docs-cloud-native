(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{366:function(t,a,s){"use strict";s.r(a);var r=s(44),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("h2",{attrs:{id:"为什么出现容器技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么出现容器技术"}},[t._v("#")]),t._v(" 为什么出现容器技术")]),t._v(" "),s("p",[t._v("一个应用想要在生产服务器上跑起来，除了应用程序本身以外，还需要关心宿主机的操作系统、文件存储、网络等等因素，这些基础环境差异会对应用部署造成困扰，容器即为解决应用打包发布问题而生。")]),t._v(" "),s("h2",{attrs:{id:"容器是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器是什么"}},[t._v("#")]),t._v(" 容器是什么")]),t._v(" "),s("p",[t._v("容器技术将应用及其整个运行时环境（包括全部所需文件）一起进行打包或隔离，生成一个轻量级应用代码包（镜像），它包含依赖项，例如编程语言运行时的特定版本和运行软件服务所需的库。以使得应用在容器环境中运行时无需关心外部宿主机环境，区别于虚拟机技术模拟完整的硬件环境用以运行独立的操作系统，容器在操作系统级别进行虚拟化，多个容器共享同一个系统内核，只是将容器应用进程与系统其他部分隔离开，从而以更小的开销实现运行环境隔离。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cloud.google.com/images/containers-landing/containers-101-2x.png?hl=zh-cn",alt:"容器 VS 虚拟机"}})]),t._v(" "),s("h2",{attrs:{id:"容器技术应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器技术应用"}},[t._v("#")]),t._v(" 容器技术应用")]),t._v(" "),s("p",[t._v("自云计算及微服务等概念兴起后，容器技术被大量应用。")])])}),[],!1,null,null,null);a.default=e.exports}}]);