(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{372:function(e,t,a){"use strict";a.r(t);var r=a(44),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),a("p",[e._v("Kubernetes - 生产级别的容器编排系统。实现自动化的容器部署、伸缩和管理。")]),e._v(" "),a("p",[e._v("特性：")]),e._v(" "),a("ul",[a("li",[e._v("基于容器的自动化部署及回滚")]),e._v(" "),a("li",[e._v("服务发现及负载均衡")]),e._v(" "),a("li",[e._v("存储资源编排")]),e._v(" "),a("li",[e._v("秘钥及应用配置管理")]),e._v(" "),a("li",[e._v("自动装箱")]),e._v(" "),a("li",[e._v("批处理管理")]),e._v(" "),a("li",[e._v("IPv4/IPv6 双协议栈")]),e._v(" "),a("li",[e._v("自我修复能力")]),e._v(" "),a("li",[e._v("水平伸缩能力")]),e._v(" "),a("li",[e._v("插件机制的扩展性")])]),e._v(" "),a("h2",{attrs:{id:"基本架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本架构"}},[e._v("#")]),e._v(" 基本架构")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg",alt:"Kubernetes 集群"}})]),e._v(" "),a("h2",{attrs:{id:"控制平面组件-control-plane"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制平面组件-control-plane"}},[e._v("#")]),e._v(" 控制平面组件 [Control Plane]")]),e._v(" "),a("p",[e._v("控制平面组件负责集群的管理，一般单独部署在 Master 节点上，不会运行用户容器。")]),e._v(" "),a("h3",{attrs:{id:"kube-apiserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-apiserver"}},[e._v("#")]),e._v(" kube-apiserver")]),e._v(" "),a("p",[e._v("REST API 服务，对外提供用于管理集群的 Kubernetes API；")]),e._v(" "),a("h3",{attrs:{id:"etcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etcd"}},[e._v("#")]),e._v(" etcd")]),e._v(" "),a("p",[e._v("分布式 key-value 数据库，用于存储 k8s 集群数据")]),e._v(" "),a("h3",{attrs:{id:"kube-scheduler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-scheduler"}},[e._v("#")]),e._v(" kube-scheduler")]),e._v(" "),a("p",[e._v("Pod 调度组件")]),e._v(" "),a("h3",{attrs:{id:"kube-controller-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-controller-manager"}},[e._v("#")]),e._v(" kube-controller-manager")]),e._v(" "),a("p",[e._v("Pod 控制器，包括："),a("code",[e._v("Node Controller")]),e._v(" / "),a("code",[e._v("Job Controller")]),e._v(" / "),a("code",[e._v("Endpoints Controller")]),e._v(" / "),a("code",[e._v("Service Account Controller")])]),e._v(" "),a("h3",{attrs:{id:"cloud-controller-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-controller-manager"}},[e._v("#")]),e._v(" cloud-controller-manager")]),e._v(" "),a("p",[e._v("第三方云平台供应商接入")]),e._v(" "),a("h2",{attrs:{id:"node-组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-组件"}},[e._v("#")]),e._v(" Node 组件")]),e._v(" "),a("p",[e._v("部署在每个 Node 节点即 Worker 节点上。")]),e._v(" "),a("h3",{attrs:{id:"kubelet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubelet"}},[e._v("#")]),e._v(" kubelet")]),e._v(" "),a("p",[e._v("运行在每个k8s节点上，负责 pod 管理")]),e._v(" "),a("h3",{attrs:{id:"kube-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-proxy"}},[e._v("#")]),e._v(" kube-proxy")]),e._v(" "),a("p",[e._v("运行在每个k8s节点上，负责每个节点的网络代理")]),e._v(" "),a("h3",{attrs:{id:"container-runtime-容器运行时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container-runtime-容器运行时"}},[e._v("#")]),e._v(" Container-Runtime 容器运行时")]),e._v(" "),a("p",[e._v("Kubernetes CRI")]),e._v(" "),a("h2",{attrs:{id:"插件-addons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件-addons"}},[e._v("#")]),e._v(" 插件 [Addons]")]),e._v(" "),a("h3",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[e._v("#")]),e._v(" DNS")]),e._v(" "),a("h3",{attrs:{id:"集群资源监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群资源监控"}},[e._v("#")]),e._v(" 集群资源监控")]),e._v(" "),a("h3",{attrs:{id:"集群日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群日志"}},[e._v("#")]),e._v(" 集群日志")])])}),[],!1,null,null,null);t.default=s.exports}}]);